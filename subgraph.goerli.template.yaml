specVersion: 0.0.2
description: Cartesi Explorer
repository: "https://github.com/cartesi/subgraph"
schema:
    file: ./schema.graphql
dataSources:
    - kind: ethereum/contract
      name: StakingImpl
      network:
      source:
          address: StakingImpl
          abi: StakingImpl
          startBlock:
      mapping:
          kind: ethereum/events
          apiVersion: 0.0.4
          language: wasm/assemblyscript
          entities:
              - Staker
              - Summary
          abis:
              - name: StakingImpl
                file:
          eventHandlers:
              - event: "Stake(indexed address,uint256,uint256)"
                handler: handleStakeEvent
              - event: "Unstake(indexed address,uint256,uint256)"
                handler: handleUnstakeEvent
              - event: "Withdraw(indexed address,uint256)"
                handler: handleWithdrawEvent
          file: ./src/user.ts
    - kind: ethereum/contract
      name: WorkerManagerAuthManager
      network:
      source:
          address: WorkerManagerAuthManagerImpl
          abi: WorkerManagerAuthManagerImpl
          startBlock:
      mapping:
          kind: ethereum/events
          apiVersion: 0.0.4
          language: wasm/assemblyscript
          entities:
              - Staker
              - Summary
              - Worker
          abis:
              - name: WorkerManagerAuthManagerImpl
                file:
          eventHandlers:
              - event: "JobOffer(indexed address,indexed address)"
                handler: handleJobOffer
              - event: "JobAccepted(indexed address,indexed address)"
                handler: handleJobAccepted
              - event: "JobRejected(indexed address,indexed address)"
                handler: handleJobRejected
              - event: "Retired(indexed address,indexed address)"
                handler: handleRetired
              - event: "Authorization(indexed address,indexed address,indexed address)"
                handler: handleAuthorization
              - event: "Deauthorization(indexed address,indexed address,indexed address)"
                handler: handleDeauthorization
          file: ./src/node.ts
    - kind: ethereum/contract
      name: PoS
      network:
      source:
          address: PoS
          abi: PoS
          startBlock:
      mapping:
          kind: ethereum/events
          apiVersion: 0.0.4
          language: wasm/assemblyscript
          entities:
              - Block
              - Chain
              - Staker
              - Summary
              - Worker
          abis:
              - name: PoS
                file:
          eventHandlers:
              - event: "Rewarded(indexed uint256,indexed address,indexed address,address,uint256,uint256)"
                handler: handleRewarded
          file: ./src/block.ts
    - kind: ethereum/contract
      name: BlockSelector
      network:
      source:
          address: BlockSelector
          abi: BlockSelector
          startBlock:
      mapping:
          kind: ethereum/events
          apiVersion: 0.0.4
          language: wasm/assemblyscript
          entities:
              - Block
              - Chain
              - Staker
              - Summary
              - Worker
          abis:
              - name: BlockSelector
                file:
          eventHandlers:
              - event: "BlockProduced(indexed uint256,indexed address,uint256,uint256,uint256,uint256)"
                handler: handleBlockProduced
          file: ./src/block.ts
